jobs:
  check-release-job:
    name: Check for release marker
    outputs:
      is-release: ${{ steps.check_version.outcome == 'success' }}
      release-version-info: ${{ steps.version_info.outputs.VERSION_INFO }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
    - continue-on-error: true
      id: version_info
      name: Extract version info
      run: echo "VERSION_INFO=`git log --format=%B -n 1 . | egrep '^[rR]elease version'
        | egrep -o '([[:digit:]]+\.){2}[[:digit:]]+' | xargs -0 printf v%s`" >> $GITHUB_OUTPUT
    - continue-on-error: true
      env:
        VERSION_INFO: ${{ steps.version_info.outputs.VERSION_INFO }}
      id: check_version
      if: ${{ steps.version_info.outputs.VERSION_INFO != 'v' }}
      name: Check version
      run: echo $VERSION_INFO
  publish-job:
    name: Maven Publish
    needs:
    - test-job
    - sample-app-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.16
    - continue-on-error: true
      name: Write GPG Sec Ring
      run: echo '${{ secrets.GPG_KEY_CONTENTS }}' | base64 -d > /tmp/secring.gpg
    - continue-on-error: true
      name: Update gradle.properties
      run: echo -e "signing.secretKeyRingFile=/tmp/secring.gpg\nsigning.keyId=${{
        secrets.SIGNING_KEY_ID }}\nsigning.password=${{ secrets.SIGNING_PASSWORD }}\nmavenCentralPassword=${{
        secrets.SONATYPE_NEXUS_PASSWORD }}\nmavenCentralUsername=${{ secrets.SONATYPE_NEXUS_USERNAME
        }}" >> gradle.properties
    - continue-on-error: true
      name: Fetch buck
      run: '(rm -rf buck && mkdir buck && \

        wget https://jitpack.io/com/github/facebook/buck/v2022.05.05.01/buck-v2022.05.05.01-java11.pex
        && \

        mv buck-v2022.05.05.01-java11.pex buck/buck && \

        chmod +x buck/buck && \

        ls -l buck)

        '
    - continue-on-error: true
      name: Upload Android Archives
      run: ./gradlew publish --no-daemon --no-parallel --info --stacktrace
    - continue-on-error: true
      name: Release and close
      run: ./gradlew closeAndReleaseRepository
    - continue-on-error: true
      if: always()
      name: Clean secrets
      run: rm /tmp/secring.gpg
  push-tags-job:
    name: Push tags if release succeeded
    needs:
    - check-release-job
    - publish-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set Git tag
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ needs.check-release-job.outputs.release-version-info }}
  sample-app-job:
    name: Assemble Sample App
    needs:
    - start-release-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.16
    - continue-on-error: true
      name: Fetch buck
      run: '(rm -rf buck && mkdir buck && \

        wget https://jitpack.io/com/github/facebook/buck/v2022.05.05.01/buck-v2022.05.05.01-java11.pex
        && \

        mv buck-v2022.05.05.01-java11.pex buck/buck && \

        chmod +x buck/buck && \

        ls -l buck)

        '
    - continue-on-error: true
      name: Assemble sample app
      run: BUCK_PATH=`realpath buck/buck` ./gradlew :sample:assembleRelease --stacktrace
  start-release-job:
    if: ${{ needs.check-release-job.outputs.is-release == 'true' }}
    name: Skip all if not a release
    needs:
    - check-release-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check step
      run: echo "Starting a release"
  test-job:
    name: Run Tests
    needs:
    - start-release-job
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.16
    - continue-on-error: true
      name: Fetch buck
      run: '(rm -rf buck && mkdir buck && \

        wget https://jitpack.io/com/github/facebook/buck/v2022.05.05.01/buck-v2022.05.05.01-java11.pex
        && \

        mv buck-v2022.05.05.01-java11.pex buck/buck && \

        chmod +x buck/buck && \

        ls -l buck)

        '
    - continue-on-error: true
      name: Run tests
      uses: nick-invision/retry@v1
      with:
        command: BUCK_PATH=`realpath buck/buck` ./gradlew test -x :litho-intellij-plugin:test
          --stacktrace
        max_attempts: 2
        timeout_minutes: 60
name: Publish on release commits
on:
  repository_dispatch:
    types: trigger-ga___release.yml
